name: ci

on:
- pull_request
- push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
        - Node.js 0.10
        - Node.js 0.12
        - io.js 1.x
        - io.js 2.x
        - io.js 3.x
        - Node.js 4.x
        - Node.js 5.x
        - Node.js 6.x
        - Node.js 7.x
        - Node.js 8.x
        - Node.js 9.x
        - Node.js 10.x
        - Node.js 11.x
        - Node.js 12.x

        include:
        - name: Node.js 0.10
          node-version: "0.10"
          npm-i: mocha@3.5.3 supertest@2.0.0

        - name: Node.js 0.12
          node-version: "0.12"
          npm-i: mocha@3.5.3 supertest@2.0.0

        - name: io.js 1.x
          node-version: "1.8"
          npm-i: mocha@3.5.3 supertest@2.0.0

        - name: io.js 2.x
          node-version: "2.5"
          npm-i: mocha@3.5.3 supertest@2.0.0

        - name: io.js 3.x
          node-version: "3.3"
          npm-i: mocha@3.5.3 supertest@2.0.0

        - name: Node.js 4.x
          node-version: "4.9"
          npm-i: mocha@5.2.0 supertest@3.4.2

        - name: Node.js 5.x
          node-version: "5.12"
          npm-i: mocha@5.2.0 supertest@3.4.2

        - name: Node.js 6.x
          node-version: "6.17"
          npm-i: mocha@6.2.2

        - name: Node.js 7.x
          node-version: "7.10"
          npm-i: mocha@6.2.2

        - name: Node.js 8.x
          node-version: "8.17"
          npm-i: mocha@7.2.0

        - name: Node.js 9.x
          node-version: "9.11"
          npm-i: mocha@7.2.0

        - name: Node.js 10.x
          node-version: "10.24"

        - name: Node.js 11.x
          node-version: "11.15"

        - name: Node.js 12.x
          node-version: "12.22"

    steps:
    - uses: actions/checkout@v2

    - name: Install Node.js ${{ matrix.node-version }}
      shell: bash -eo pipefail -l {0}
      run: |
        nvm install --default ${{ matrix.node-version }}
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    - name: Configure npm
      run: |
        npm config set loglevel error
        npm config set shrinkwrap false

    - name: Install npm module(s) ${{ matrix.npm-i }}
      run: npm install --save-dev ${{ matrix.npm-i }}
      if: matrix.npm-i != ''

    - name: Remove non-test dependencies
      run: npm rm --silent --save-dev connect-redis

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:

    - name: Run tests
      shell: bash
      run: npm run test-ci

    - name: Lint code
      run: npm run lint

    - name: Collect code coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.test_number }}
        parallel: true

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Upload code coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
